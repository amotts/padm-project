Trajectory Optimization scratch

Chosen trajectory to optimize: Starting position to drawer

Your job is to define a constrained (nonlinear) optimization problem with an objective function and relevant constraints, use the pyDrake library to solve for a new optimized trajectory, and execute it in simulation. 


Goal is to go from initial configuration in the joint space to the goal configuration in the joint space
Cost: length of path? (number of steps, time, euclidean distance)
Constraints: 
- must equal start at start
- must equal goal at end
- joint velocities must be zero at start
- joint velocities must be zero at end
- distance between config and obstacles must be > 0 **OPTIONAL**
- joints move slower than max velocity

x is 7xn matrix for the 7 different joint angles. n is number of steps 
y is 7xn matrix for the 7 different joint velocities

x(i+1) = y(i)t(i)+x(i)
minimize sum t for all i

can seed with the path generated by rrt

See notability note for worked out constraints



It WORKS! Use function get_optimal_trajectory(start, end) and it will output the positions and the times at each trajectory. since the render is static during that window however, had to decrease the maximum time so that it would update the position more frequently and look smoother
Had to play with the time value since when it was set that it could be equal to zero, bad things happened. 